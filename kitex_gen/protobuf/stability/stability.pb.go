//
// Copyright 2021 CloudWeGo Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.29.3
// source: stability.proto

package stability

import (
	context "context"
	instparam "github.com/cloudwego/kitex-tests/kitex_gen/protobuf/instparam"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TestEnum int32

const (
	TestEnum_ZERO   TestEnum = 0
	TestEnum_FIRST  TestEnum = 1
	TestEnum_SECOND TestEnum = 2
	TestEnum_THIRD  TestEnum = 3
	TestEnum_FOURTH TestEnum = 4
)

// Enum value maps for TestEnum.
var (
	TestEnum_name = map[int32]string{
		0: "ZERO",
		1: "FIRST",
		2: "SECOND",
		3: "THIRD",
		4: "FOURTH",
	}
	TestEnum_value = map[string]int32{
		"ZERO":   0,
		"FIRST":  1,
		"SECOND": 2,
		"THIRD":  3,
		"FOURTH": 4,
	}
)

func (x TestEnum) Enum() *TestEnum {
	p := new(TestEnum)
	*p = x
	return p
}

func (x TestEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TestEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_stability_proto_enumTypes[0].Descriptor()
}

func (TestEnum) Type() protoreflect.EnumType {
	return &file_stability_proto_enumTypes[0]
}

func (x TestEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TestEnum.Descriptor instead.
func (TestEnum) EnumDescriptor() ([]byte, []int) {
	return file_stability_proto_rawDescGZIP(), []int{0}
}

type STRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string            `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	On         bool              `protobuf:"varint,2,opt,name=on,proto3" json:"on,omitempty"`
	D          float64           `protobuf:"fixed64,7,opt,name=d,proto3" json:"d,omitempty"`
	Str        string            `protobuf:"bytes,9,opt,name=str,proto3" json:"str,omitempty"`
	StringMap  map[string]string `protobuf:"bytes,10,rep,name=stringMap,proto3" json:"stringMap,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	StringList []string          `protobuf:"bytes,11,rep,name=stringList,proto3" json:"stringList,omitempty"`
	E          TestEnum          `protobuf:"varint,13,opt,name=e,proto3,enum=stability.TestEnum" json:"e,omitempty"`
	FlagMsg    string            `protobuf:"bytes,14,opt,name=flagMsg,proto3" json:"flagMsg,omitempty"`
	Framework  string            `protobuf:"bytes,15,opt,name=framework,proto3" json:"framework,omitempty"`
	MockCost   string            `protobuf:"bytes,16,opt,name=mockCost,proto3" json:"mockCost,omitempty"`
}

func (x *STRequest) Reset() {
	*x = STRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stability_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *STRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*STRequest) ProtoMessage() {}

func (x *STRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stability_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use STRequest.ProtoReflect.Descriptor instead.
func (*STRequest) Descriptor() ([]byte, []int) {
	return file_stability_proto_rawDescGZIP(), []int{0}
}

func (x *STRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *STRequest) GetOn() bool {
	if x != nil {
		return x.On
	}
	return false
}

func (x *STRequest) GetD() float64 {
	if x != nil {
		return x.D
	}
	return 0
}

func (x *STRequest) GetStr() string {
	if x != nil {
		return x.Str
	}
	return ""
}

func (x *STRequest) GetStringMap() map[string]string {
	if x != nil {
		return x.StringMap
	}
	return nil
}

func (x *STRequest) GetStringList() []string {
	if x != nil {
		return x.StringList
	}
	return nil
}

func (x *STRequest) GetE() TestEnum {
	if x != nil {
		return x.E
	}
	return TestEnum_ZERO
}

func (x *STRequest) GetFlagMsg() string {
	if x != nil {
		return x.FlagMsg
	}
	return ""
}

func (x *STRequest) GetFramework() string {
	if x != nil {
		return x.Framework
	}
	return ""
}

func (x *STRequest) GetMockCost() string {
	if x != nil {
		return x.MockCost
	}
	return ""
}

type STResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Str     string            `protobuf:"bytes,1,opt,name=str,proto3" json:"str,omitempty"`
	Mp      map[string]string `protobuf:"bytes,2,rep,name=mp,proto3" json:"mp,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FlagMsg string            `protobuf:"bytes,3,opt,name=flagMsg,proto3" json:"flagMsg,omitempty"`
}

func (x *STResponse) Reset() {
	*x = STResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stability_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *STResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*STResponse) ProtoMessage() {}

func (x *STResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stability_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use STResponse.ProtoReflect.Descriptor instead.
func (*STResponse) Descriptor() ([]byte, []int) {
	return file_stability_proto_rawDescGZIP(), []int{1}
}

func (x *STResponse) GetStr() string {
	if x != nil {
		return x.Str
	}
	return ""
}

func (x *STResponse) GetMp() map[string]string {
	if x != nil {
		return x.Mp
	}
	return nil
}

func (x *STResponse) GetFlagMsg() string {
	if x != nil {
		return x.FlagMsg
	}
	return ""
}

var File_stability_proto protoreflect.FileDescriptor

var file_stability_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x73, 0x74, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x73, 0x74, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x1a, 0x0f, 0x69, 0x6e,
	0x73, 0x74, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe7, 0x02,
	0x0a, 0x09, 0x53, 0x54, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6e, 0x12,
	0x0c, 0x0a, 0x01, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x73, 0x74, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x74, 0x72, 0x12,
	0x41, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x74, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x53,
	0x54, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4d,
	0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4d,
	0x61, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x01, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e,
	0x73, 0x74, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x45, 0x6e,
	0x75, 0x6d, 0x52, 0x01, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x6c, 0x61, 0x67, 0x4d, 0x73, 0x67,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x6c, 0x61, 0x67, 0x4d, 0x73, 0x67, 0x12,
	0x1c, 0x0a, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x1a, 0x0a,
	0x08, 0x6d, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x73, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6d, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x73, 0x74, 0x1a, 0x3c, 0x0a, 0x0e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x9e, 0x01, 0x0a, 0x0a, 0x53, 0x54, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x74, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x74, 0x72, 0x12, 0x2d, 0x0a, 0x02, 0x6d, 0x70, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x2e, 0x53, 0x54, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x70, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x02, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x6c, 0x61, 0x67, 0x4d,
	0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x6c, 0x61, 0x67, 0x4d, 0x73,
	0x67, 0x1a, 0x35, 0x0a, 0x07, 0x4d, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0x42, 0x0a, 0x08, 0x54, 0x65, 0x73, 0x74,
	0x45, 0x6e, 0x75, 0x6d, 0x12, 0x08, 0x0a, 0x04, 0x5a, 0x45, 0x52, 0x4f, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x46, 0x49, 0x52, 0x53, 0x54, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x45, 0x43,
	0x4f, 0x4e, 0x44, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x48, 0x49, 0x52, 0x44, 0x10, 0x03,
	0x12, 0x0a, 0x0a, 0x06, 0x46, 0x4f, 0x55, 0x52, 0x54, 0x48, 0x10, 0x04, 0x32, 0x7a, 0x0a, 0x09,
	0x53, 0x54, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x65, 0x73,
	0x74, 0x53, 0x54, 0x52, 0x65, 0x71, 0x12, 0x14, 0x2e, 0x73, 0x74, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x2e, 0x53, 0x54, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x73,
	0x74, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x53, 0x54, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x0a, 0x74, 0x65, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x52, 0x65,
	0x71, 0x12, 0x11, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x2e, 0x4f, 0x62,
	0x6a, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x2e, 0x4f, 0x62, 0x6a, 0x52, 0x65, 0x73, 0x70, 0x42, 0x3f, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x77, 0x65, 0x67, 0x6f,
	0x2f, 0x6b, 0x69, 0x74, 0x65, 0x78, 0x2d, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x6b, 0x69, 0x74,
	0x65, 0x78, 0x5f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x73, 0x74, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_stability_proto_rawDescOnce sync.Once
	file_stability_proto_rawDescData = file_stability_proto_rawDesc
)

func file_stability_proto_rawDescGZIP() []byte {
	file_stability_proto_rawDescOnce.Do(func() {
		file_stability_proto_rawDescData = protoimpl.X.CompressGZIP(file_stability_proto_rawDescData)
	})
	return file_stability_proto_rawDescData
}

var file_stability_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_stability_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_stability_proto_goTypes = []interface{}{
	(TestEnum)(0),             // 0: stability.TestEnum
	(*STRequest)(nil),         // 1: stability.STRequest
	(*STResponse)(nil),        // 2: stability.STResponse
	nil,                       // 3: stability.STRequest.StringMapEntry
	nil,                       // 4: stability.STResponse.MpEntry
	(*instparam.ObjReq)(nil),  // 5: instparam.ObjReq
	(*instparam.ObjResp)(nil), // 6: instparam.ObjResp
}
var file_stability_proto_depIdxs = []int32{
	3, // 0: stability.STRequest.stringMap:type_name -> stability.STRequest.StringMapEntry
	0, // 1: stability.STRequest.e:type_name -> stability.TestEnum
	4, // 2: stability.STResponse.mp:type_name -> stability.STResponse.MpEntry
	1, // 3: stability.STService.testSTReq:input_type -> stability.STRequest
	5, // 4: stability.STService.testObjReq:input_type -> instparam.ObjReq
	2, // 5: stability.STService.testSTReq:output_type -> stability.STResponse
	6, // 6: stability.STService.testObjReq:output_type -> instparam.ObjResp
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_stability_proto_init() }
func file_stability_proto_init() {
	if File_stability_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_stability_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*STRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stability_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*STResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_stability_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_stability_proto_goTypes,
		DependencyIndexes: file_stability_proto_depIdxs,
		EnumInfos:         file_stability_proto_enumTypes,
		MessageInfos:      file_stability_proto_msgTypes,
	}.Build()
	File_stability_proto = out.File
	file_stability_proto_rawDesc = nil
	file_stability_proto_goTypes = nil
	file_stability_proto_depIdxs = nil
}

var _ context.Context

// Code generated by Kitex v0.12.3. DO NOT EDIT.

type STService interface {
	TestSTReq(ctx context.Context, req *STRequest) (res *STResponse, err error)
	TestObjReq(ctx context.Context, req *instparam.ObjReq) (res *instparam.ObjResp, err error)
}
