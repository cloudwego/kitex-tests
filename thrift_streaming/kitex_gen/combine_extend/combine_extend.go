// Code generated by thriftgo (0.3.5). DO NOT EDIT.

package combine_extend

import (
	"github.com/apache/thrift/lib/go/thrift"
	"github.com/cloudwego/kitex-tests/thrift_streaming/kitex_gen/echo"
)

type A interface {
	echo.PingPongOnlyService
}

type AClient struct {
	*echo.PingPongOnlyServiceClient
}

func NewAClientFactory(t thrift.TTransport, f thrift.TProtocolFactory) *AClient {
	return &AClient{
		PingPongOnlyServiceClient: echo.NewPingPongOnlyServiceClientFactory(t, f),
	}
}

func NewAClientProtocol(t thrift.TTransport, iprot thrift.TProtocol, oprot thrift.TProtocol) *AClient {
	return &AClient{
		PingPongOnlyServiceClient: echo.NewPingPongOnlyServiceClientProtocol(t, iprot, oprot),
	}
}

func NewAClient(c thrift.TClient) *AClient {
	return &AClient{
		PingPongOnlyServiceClient: echo.NewPingPongOnlyServiceClient(c),
	}
}

type B interface {
	echo.StreamOnlyServiceChildChild
}

type BClient struct {
	*echo.StreamOnlyServiceChildChildClient
}

func NewBClientFactory(t thrift.TTransport, f thrift.TProtocolFactory) *BClient {
	return &BClient{
		StreamOnlyServiceChildChildClient: echo.NewStreamOnlyServiceChildChildClientFactory(t, f),
	}
}

func NewBClientProtocol(t thrift.TTransport, iprot thrift.TProtocol, oprot thrift.TProtocol) *BClient {
	return &BClient{
		StreamOnlyServiceChildChildClient: echo.NewStreamOnlyServiceChildChildClientProtocol(t, iprot, oprot),
	}
}

func NewBClient(c thrift.TClient) *BClient {
	return &BClient{
		StreamOnlyServiceChildChildClient: echo.NewStreamOnlyServiceChildChildClient(c),
	}
}

type AProcessor struct {
	*echo.PingPongOnlyServiceProcessor
}

func NewAProcessor(handler A) *AProcessor {
	self := &AProcessor{echo.NewPingPongOnlyServiceProcessor(handler)}
	return self
}

type BProcessor struct {
	*echo.StreamOnlyServiceChildChildProcessor
}

func NewBProcessor(handler B) *BProcessor {
	self := &BProcessor{echo.NewStreamOnlyServiceChildChildProcessor(handler)}
	return self
}
