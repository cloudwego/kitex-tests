// Code generated by thriftgo (0.3.3). DO NOT EDIT.

package baseline

import (
	"reflect"

	"github.com/cloudwego/thriftgo/thrift_reflection"
)

// IDL Name: baseline
// IDL Path: baseline.thrift

var file_baseline_thrift_go_types = []interface{}{
	(*Simple)(nil),         // Struct 0: baseline.Simple
	(*PartialSimple)(nil),  // Struct 1: baseline.PartialSimple
	(*Nesting)(nil),        // Struct 2: baseline.Nesting
	(*PartialNesting)(nil), // Struct 3: baseline.PartialNesting
	(*Nesting2)(nil),       // Struct 4: baseline.Nesting2
}
var file_baseline_thrift *thrift_reflection.FileDescriptor
var file_idl_baseline_rawDesc = []byte{
	0x1f, 0x8b, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xcc, 0x58, 0xff, 0x4e, 0xdb, 0x3c,
	0x14, 0xbd, 0x34, 0x69, 0x92, 0x36, 0xd, 0xf9, 0xa4, 0x6f, 0xcf, 0x1, 0x52, 0x5b, 0xf5, 0x1,
	0x10, 0x9a, 0x84, 0x34, 0xa6, 0x49, 0x7d, 0x0, 0x94, 0xb6, 0x86, 0x7a, 0xb, 0x4d, 0x48, 0x5c,
	0xa4, 0xbe, 0xfd, 0x64, 0xc7, 0xe, 0x50, 0x32, 0xe7, 0xba, 0xf6, 0x60, 0x7f, 0x15, 0x85, 0xeb,
	0xfb, 0xe3, 0xdc, 0xe3, 0xe3, 0x6b, 0xc7, 0x70, 0x6, 0x0, 0xe9, 0x2a, 0xab, 0x49, 0x4e, 0x77,
	0xe4, 0x82, 0x6d, 0x2b, 0x7a, 0xcf, 0x12, 0x18, 0xc4, 0x31, 0x0, 0x40, 0x2, 0x9e, 0xf8, 0x83,
	0x1b, 0xd, 0x1e, 0xa, 0x0, 0x88, 0x94, 0x69, 0xa, 0xfe, 0x84, 0xff, 0xa7, 0xdb, 0x43, 0xc,
	0x3, 0xfe, 0xf5, 0x4a, 0x7e, 0x5d, 0x92, 0xea, 0x99, 0xae, 0x49, 0xa, 0x1e, 0x5f, 0x33, 0xd4,
	0xad, 0x99, 0x2c, 0xe9, 0x63, 0x99, 0x93, 0x5b, 0xc2, 0xb6, 0xc5, 0x66, 0x2, 0x9e, 0xce, 0x36,
	0x68, 0x6c, 0x1, 0x93, 0x8b, 0x57, 0x91, 0x27, 0xa4, 0xbb, 0x18, 0x7c, 0x0, 0x8, 0xaf, 0xc9,
	0x7d, 0xb6, 0xcf, 0x59, 0x4, 0x43, 0xee, 0x3b, 0x81, 0x30, 0x4e, 0x39, 0x26, 0x31, 0x44, 0xd0,
	0x60, 0x33, 0x14, 0x1f, 0xb8, 0xbf, 0x28, 0x2b, 0xe9, 0x45, 0x59, 0xd4, 0x4c, 0x81, 0x15, 0x5e,
	0xd6, 0xc2, 0x57, 0xc, 0x1, 0xb7, 0x4d, 0x21, 0xe4, 0x9, 0xc2, 0x80, 0xaf, 0xd5, 0xa5, 0xf0,
	0xff, 0x8f, 0xac, 0x62, 0x34, 0xcb, 0xd, 0x40, 0x48, 0xde, 0x2c, 0x71, 0x85, 0xc5, 0x91, 0x57,
	0x33, 0x48, 0xc0, 0xb4, 0xec, 0xe4, 0x3b, 0xa9, 0x19, 0xdd, 0x3d, 0xa0, 0xa, 0xe, 0xa5, 0xb1,
	0xab, 0x52, 0x5b, 0x7f, 0xe, 0xfa, 0x1e, 0x5d, 0xee, 0x1a, 0x67, 0xa6, 0x8, 0x7c, 0x91, 0x78,
	0x9b, 0x0, 0x71, 0xfe, 0x76, 0x8d, 0x2b, 0x3c, 0x8e, 0xdd, 0xfe, 0xe5, 0xde, 0x9f, 0xcb, 0x38,
	0x53, 0x54, 0xcd, 0x91, 0xb2, 0x76, 0x55, 0xed, 0x8b, 0x43, 0x7, 0xed, 0x1f, 0xa9, 0xf6, 0x4f,
	0xbb, 0x50, 0x48, 0xc0, 0x57, 0xbe, 0x86, 0xd0, 0xfc, 0x77, 0xd8, 0xab, 0x87, 0x52, 0x94, 0xa4,
	0x74, 0x6, 0x3a, 0xd3, 0xd1, 0xd5, 0x81, 0x91, 0xaf, 0x94, 0xe4, 0x7d, 0x20, 0xfa, 0xab, 0x3,
	0xc3, 0xee, 0x69, 0x2d, 0x76, 0x37, 0x8b, 0x39, 0x26, 0x9e, 0x47, 0x17, 0xf3, 0xce, 0x70, 0x3,
	0x15, 0x8e, 0xaf, 0x8d, 0x39, 0x9a, 0x3f, 0xeb, 0xbb, 0x75, 0xb1, 0x7b, 0x56, 0x80, 0xa2, 0xd2,
	0x88, 0xaf, 0x8b, 0xfd, 0x2a, 0x47, 0x55, 0x1e, 0x6c, 0x84, 0x69, 0x67, 0x32, 0x9e, 0x61, 0xed,
	0xb3, 0x29, 0xae, 0xf6, 0x59, 0x37, 0xb5, 0x7c, 0xa3, 0x70, 0xf1, 0x92, 0x55, 0x74, 0xf7, 0x80,
	0xaa, 0xb1, 0x16, 0xa6, 0x9d, 0x41, 0x87, 0x66, 0x41, 0xaf, 0xe8, 0x2e, 0xab, 0xe, 0xa8, 0xa0,
	0x2b, 0x61, 0xda, 0x19, 0x34, 0xe8, 0xd8, 0x44, 0x47, 0x3b, 0x1, 0x7f, 0x14, 0xc9, 0x8d, 0xa0,
	0x4d, 0xe6, 0xc3, 0x37, 0xc2, 0xa7, 0x30, 0xf0, 0xdf, 0xe8, 0x8e, 0x3a, 0x3d, 0x65, 0x5f, 0x52,
	0xbd, 0x96, 0x9, 0x66, 0x5a, 0xf0, 0xf7, 0xec, 0xb5, 0x60, 0x8c, 0xb9, 0x60, 0x6c, 0x49, 0xb6,
	0x21, 0x95, 0xd2, 0xb, 0x19, 0x1, 0x3, 0xdf, 0xf8, 0x1b, 0xad, 0x59, 0xc3, 0xa9, 0x3e, 0x96,
	0xe4, 0xb4, 0x66, 0x13, 0xf0, 0x31, 0xb3, 0xa3, 0x5e, 0xe6, 0x50, 0x7d, 0xd, 0x1a, 0x32, 0xb9,
	0xe0, 0xd1, 0xcb, 0x21, 0x95, 0xb1, 0x6d, 0x8b, 0x51, 0xb3, 0x12, 0x93, 0x8a, 0x77, 0x33, 0x9b,
	0x5a, 0xeb, 0x9b, 0xd8, 0xc3, 0xa2, 0x55, 0x8c, 0x95, 0x77, 0xeb, 0x62, 0x43, 0x5a, 0x75, 0x57,
	0xe9, 0xad, 0x8a, 0xcd, 0x41, 0x7d, 0xe4, 0x31, 0x31, 0xb9, 0x85, 0xbc, 0x7f, 0xfd, 0xf9, 0x61,
	0x9a, 0x27, 0x6a, 0xd0, 0xeb, 0xa5, 0x38, 0xdd, 0x79, 0xaa, 0x4f, 0x7b, 0x52, 0xb5, 0xb9, 0xaa,
	0x1c, 0x70, 0x58, 0x2e, 0xe6, 0xa7, 0x9e, 0x93, 0xef, 0xf7, 0xa8, 0xf6, 0xda, 0x75, 0x9b, 0x95,
	0xcd, 0x3e, 0x40, 0xed, 0x37, 0xef, 0x31, 0x2b, 0x91, 0x5b, 0xb2, 0x6f, 0x13, 0x48, 0xb3, 0xce,
	0x1a, 0x42, 0xa3, 0x1a, 0xe4, 0x35, 0x70, 0xc9, 0xaa, 0xfd, 0x9a, 0x59, 0xdc, 0xdb, 0x22, 0xa3,
	0xa8, 0xa3, 0xdb, 0xac, 0xbc, 0x99, 0x4d, 0x11, 0x9d, 0xea, 0xc7, 0x4c, 0x90, 0xaa, 0x97, 0x78,
	0x8b, 0x79, 0x37, 0x5a, 0x23, 0xa3, 0xbc, 0x1b, 0x2d, 0xc3, 0x34, 0x1b, 0xa5, 0x65, 0xba, 0x36,
	0x8e, 0xcd, 0xb4, 0xac, 0x39, 0xa3, 0x2c, 0x8e, 0xa7, 0xd8, 0x8c, 0x36, 0xbc, 0x81, 0x8b, 0xb9,
	0x2b, 0xde, 0x8b, 0xfe, 0xd8, 0xa0, 0x35, 0x31, 0xca, 0xbe, 0x91, 0x93, 0x5e, 0xf2, 0xe1, 0x24,
	0xed, 0x4f, 0xcc, 0x4a, 0xde, 0x1d, 0xa1, 0xeb, 0xa2, 0xf8, 0x45, 0x5b, 0x51, 0x8e, 0xb8, 0xf7,
	0x3b, 0xba, 0x98, 0x63, 0x32, 0xf6, 0xf9, 0xa4, 0x75, 0xf2, 0x90, 0x75, 0x7e, 0xaa, 0xac, 0x61,
	0x4e, 0x6d, 0x87, 0xb2, 0xa6, 0x3b, 0xdb, 0x53, 0xbb, 0xf1, 0xe9, 0xe8, 0xb2, 0x8d, 0x99, 0x6e,
	0xdd, 0xe, 0x2e, 0x47, 0xf, 0x3d, 0xe, 0xe6, 0x17, 0x13, 0xe9, 0x46, 0x3c, 0x33, 0x99, 0x29,
	0xf8, 0xa7, 0x91, 0x4, 0x83, 0xa3, 0x25, 0x57, 0xda, 0xa7, 0xa, 0xc9, 0x92, 0x58, 0x67, 0xfc,
	0x1f, 0x7, 0x42, 0xe4, 0x22, 0x57, 0x39, 0x40, 0x42, 0xd6, 0xd6, 0x83, 0x44, 0xfb, 0x9e, 0xe6,
	0xe0, 0x62, 0xe5, 0x6a, 0xc, 0x30, 0x63, 0xb0, 0x9d, 0xaa, 0x99, 0xdd, 0xe2, 0xec, 0xa7, 0x7d,
	0xc3, 0x87, 0x4, 0xae, 0x1e, 0x38, 0x4a, 0x60, 0xe4, 0x43, 0xdf, 0x6c, 0xb3, 0xe7, 0x86, 0x8f,
	0x9b, 0x90, 0xd5, 0x7b, 0x33, 0x8a, 0x57, 0xda, 0xf7, 0x61, 0xb3, 0xa9, 0xd6, 0x7e, 0x1c, 0x32,
	0x53, 0x43, 0xfb, 0xb, 0xb7, 0xe1, 0x1c, 0xba, 0x24, 0x48, 0x6e, 0x79, 0x35, 0xb1, 0xa3, 0x96,
	0xd9, 0x1c, 0x6a, 0x73, 0x91, 0x7d, 0x3f, 0x81, 0x76, 0x3c, 0xe4, 0x6, 0x13, 0x78, 0xf5, 0xdc,
	0x9b, 0x42, 0x24, 0x7f, 0x47, 0xf2, 0x77, 0x2c, 0x7e, 0xe1, 0x77, 0x0, 0x0, 0x0, 0xff, 0xff,
	0xfc, 0xb4, 0x6, 0x32, 0x70, 0x1b, 0x0, 0x0,
}

func init() {
	if file_baseline_thrift != nil {
		return
	}
	type x struct{}
	builder := &thrift_reflection.FileDescriptorBuilder{
		Bytes:         file_idl_baseline_rawDesc,
		GoTypes:       file_baseline_thrift_go_types,
		GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
	}
	file_baseline_thrift = thrift_reflection.BuildFileDescriptor(builder)
}

func GetFileDescriptorForBaseline() *thrift_reflection.FileDescriptor {
	return file_baseline_thrift
}
func (p *Simple) GetDescriptor() *thrift_reflection.StructDescriptor {
	return file_baseline_thrift.GetStructDescriptor("Simple")
}

func (p *Simple) GetTypeDescriptor() *thrift_reflection.TypeDescriptor {
	ret := thrift_reflection.NewTypeDescriptor()
	ret.Filepath = file_baseline_thrift.Filepath
	ret.Name = "Simple"
	return ret
}
func (p *PartialSimple) GetDescriptor() *thrift_reflection.StructDescriptor {
	return file_baseline_thrift.GetStructDescriptor("PartialSimple")
}

func (p *PartialSimple) GetTypeDescriptor() *thrift_reflection.TypeDescriptor {
	ret := thrift_reflection.NewTypeDescriptor()
	ret.Filepath = file_baseline_thrift.Filepath
	ret.Name = "PartialSimple"
	return ret
}
func (p *Nesting) GetDescriptor() *thrift_reflection.StructDescriptor {
	return file_baseline_thrift.GetStructDescriptor("Nesting")
}

func (p *Nesting) GetTypeDescriptor() *thrift_reflection.TypeDescriptor {
	ret := thrift_reflection.NewTypeDescriptor()
	ret.Filepath = file_baseline_thrift.Filepath
	ret.Name = "Nesting"
	return ret
}
func (p *PartialNesting) GetDescriptor() *thrift_reflection.StructDescriptor {
	return file_baseline_thrift.GetStructDescriptor("PartialNesting")
}

func (p *PartialNesting) GetTypeDescriptor() *thrift_reflection.TypeDescriptor {
	ret := thrift_reflection.NewTypeDescriptor()
	ret.Filepath = file_baseline_thrift.Filepath
	ret.Name = "PartialNesting"
	return ret
}
func (p *Nesting2) GetDescriptor() *thrift_reflection.StructDescriptor {
	return file_baseline_thrift.GetStructDescriptor("Nesting2")
}

func (p *Nesting2) GetTypeDescriptor() *thrift_reflection.TypeDescriptor {
	ret := thrift_reflection.NewTypeDescriptor()
	ret.Filepath = file_baseline_thrift.Filepath
	ret.Name = "Nesting2"
	return ret
}
